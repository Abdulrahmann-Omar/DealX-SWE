# /.github/workflows/deploy.yml

name: Build, Push Docker Images, and Deploy to Railway

on:
  push:
    branches:
      - main # Trigger workflow on pushes to the main branch
  workflow_dispatch: # Allow manual triggering

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to GitHub Container Registry (ghcr.io)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Login to GitHub Container Registry (ghcr.io) ---
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- Set up Docker image names with lowercase owner ---
      - name: Set up Docker image names
        run: |
          OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "BACKEND_IMAGE_TAG=ghcr.io/$OWNER_LOWERCASE/dealx-backend" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE_TAG=ghcr.io/$OWNER_LOWERCASE/dealx-frontend" >> $GITHUB_ENV

      # --- Build and Push Backend Image ---
      - name: Build and push backend image
        id: build-backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE_TAG }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Build and Push Frontend Image ---
      - name: Build and push frontend image
        id: build-frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE_TAG }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Deploy to Railway ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Use Node.js LTS version 20.x range

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }} # Use the secret configured by the user
        # The `railway up` command typically deploys the linked repository.
        # If your Railway project is configured to deploy based on the Docker images pushed to ghcr.io,
        # you might need a different command or approach (e.g., triggering a webhook or using Railway's API directly).
        # This example assumes `railway up` triggers a deployment based on the latest commit.
        # Alternatively, if Railway services are linked to the Dockerfiles, this push might trigger it automatically.
        # If Railway services are linked to the GHCR images, we might need `railway redeploy` or similar.
        # Using `railway up --detach` for potentially long-running deployments.
        run: |
          echo "Attempting Railway deployment..."
          railway up --detach
          echo "Railway deployment command executed. Check Railway dashboard for status."
        # Add error handling if needed
        # railway status # Check status after deployment trigger

