# /.github/workflows/deploy.yml

name: Build and Push Docker Images

on:
  push:
    branches:
      - main # Trigger workflow on pushes to the main branch
  workflow_dispatch: # Allow manual triggering

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to GitHub Container Registry (ghcr.io)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Login to Container Registry ---
      # Option 1: Login to Docker Hub
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Option 2: Login to GitHub Container Registry (ghcr.io)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- Build and Push Backend Image ---
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/dealx-backend:latest # Example tag for ghcr.io
          # tags: your-dockerhub-username/dealx-backend:latest # Example tag for Docker Hub
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Build and Push Frontend Image ---
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/dealx-frontend:latest # Example tag for ghcr.io
          # tags: your-dockerhub-username/dealx-frontend:latest # Example tag for Docker Hub
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Deployment Steps (Add platform-specific steps here) ---
      # Example: Trigger deployment on Railway, Heroku, or SSH into VPS
      # - name: Deploy to Railway
      #   run: echo "Triggering Railway deployment... (Implement actual command)"
      #
      # - name: Deploy to Heroku
      #   run: echo "Triggering Heroku deployment... (Implement actual command)"
      #
      # - name: Deploy to VPS via SSH
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USERNAME }}
      #     key: ${{ secrets.VPS_SSH_KEY }}
      #     script: |
      #       cd /path/to/your/app
      #       docker-compose pull
      #       docker-compose up -d --remove-orphans
      #       echo "Deployment to VPS complete!"

