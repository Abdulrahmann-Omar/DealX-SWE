# /.github/workflows/deploy.yml

name: Build, Push Docker Images, and Deploy to Railway

on:
  push:
    branches:
      - main # Trigger workflow on pushes to the main branch
  workflow_dispatch: # Allow manual triggering

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to GitHub Container Registry (ghcr.io)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js (for checks)
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use Node.js LTS version 20
          cache: 'npm'

      # --- Pre-Deployment Checks ---
      - name: Install Backend Dependencies
        run: npm install --ignore-scripts # Use install for robustness
        working-directory: ./backend

      - name: Install Frontend Dependencies
        run: npm install --ignore-scripts # Use install for robustness
        working-directory: ./frontend

      - name: Build Frontend (Check)
        run: npm run build
        working-directory: ./frontend
        env:
          CI: true # Ensure build doesn't run in interactive mode

      # --- Docker Setup and Login ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- Set up Docker image names with lowercase owner ---
      - name: Set up Docker image names
        run: |
          OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "BACKEND_IMAGE_TAG=ghcr.io/$OWNER_LOWERCASE/dealx-backend" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE_TAG=ghcr.io/$OWNER_LOWERCASE/dealx-frontend" >> $GITHUB_ENV

      # --- Build and Push Backend Image ---
      - name: Build and push backend image
        id: build-backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE_TAG }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Build and Push Frontend Image ---
      - name: Build and push frontend image
        id: build-frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE_TAG }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Deploy to Railway ---
      - name: Install Node.js 20 manually (for Railway CLI)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ca-certificates curl gnupg
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }} # Use the secret configured by the user
        run: |
          echo "Attempting Railway deployment..."
          railway up --detach
          echo "Railway deployment command executed. Check Railway dashboard for status."

